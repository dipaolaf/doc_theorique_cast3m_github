************************************************************************
*      Cas test elementaire pour la loi d'endommagement de Mazars      *
*          Essai biaxial de traction ou compression monotones          *
*                                                                      *
* Le test est realise avec plusieurs modes de calcul :                 *
*   1) 3D volumique                                                    *
*   2) 2D contraintes planes                                           *
************************************************************************

** Options pour les traces
OPTI 'TRAC' 'PSC' ;

** Liste des modes de calcul a traiter
lcas = LECT 1 2 ;
*nh145313
*lcas = LECT 1 ; COMM '3D volumique' ;
*lcas = LECT 2 ; COMM '2D contraintes planes' ;

** Parametres geometriques
long = 1. ;
epai = 0.1 ;

** Parametres materiau
you   = 20.E9 ;
nu    = 0.2 ;
epd0  = 8.E-5 ;
at    = 1. ;
ac    = 1.5 ;
bt    = 8000. ;
bc    = 1550. ;
beta  = 1. ;

*nh145313
** Legende courbes
  tdess = 'TABLE' ;
  tdess.'TITRE' = 'TABLE' ;
  tdess. 1 = 'MARQ LOSA' ;
  tdess.'TITRE'. 1 = MOT 'Calcul' ;
  tdess. 2 = 'MARQ XS CROI' ;
  tdess.'TITRE'. 2 = MOT 'Reference' ;

** Procedure PERSO1 pour stopper le calcul sur critere de ruine (REX : ISOUSPAS>ou=1 et Increm.Défo.>ou=2.E-3)
DEBP PERSO1 t1*'TABLE' ;
  SI (EGA t1.'PERSO1_APPEL' 2) ;
*mess 'Proc PERSO1';
*mess '===========';
*mess 'SOUS-PAS' ' ' T1.'WTABLE'.'ISOUSPAS' ' DPSMAX' ' ' T1.'WTABLE'.'DPSMAX' ;
    t1 . 'ARRET' = ('>EG' T1.'WTABLE'.'ISOUSPAS' 1)
              'OU' ('>EG' T1.'WTABLE'.'DPSMAX' 2.E-3) ;
  FINSI;
FINP ;



**************** C A S  #1  :  3 D   V O L U M I Q U E ****************
SI (EXIS lcas 1) ;

** Options generales
  OPTI 'DIME' 3 'MODE' 'TRID' 'ELEM' 'CUB8' ;

** Maillage
  p1      = 0. 0. 0. ;
  p2      = 0. long 0. ;
  l12     = DROI 1 p1 p2 ;
  sgauche = l12 TRAN 1 (0. 0. long) ;
  mail    = sgauche VOLU 'TRAN' 1 (long 0. 0.) ;
  sdroite = mail FACE 2 ;
  env1    = ENVE mail ;
  sbas    = env1 ELEM 4 ;
  shaut   = env1 ELEM 3 ;
  mes1    = MESU mail ;
*nh145313
  p33 = mail POIN 'PROC' (long long long) ;
*nh145313
*rep1 = @REPERE (-0.55 -0.55 0.) 'TURQ' ;
*TRAC 'QUAL' (rep1 ET mail ET ((sgauche ET sbas) COUL 'VERT') ET ((sdroite ET shaut) COUL 'ROUG')) 'TITR' '[3D V] Maillage' ;

** Modele et caracteristiques materiau
  mo = MODE mail 'MECANIQUE' 'ELASTIQUE' 'ENDOMMAGEMENT' 'MAZARS' ;
  ma = MATE mo 'YOUN' you 'NU' nu 'KTR0' epd0 'ACOM' ac 'BCOM' bc 'ATRA' at 'BTRA' bt 'BETA' beta ;

** Blocages
  bl = (BLOQ 'UX' sgauche) ET (BLOQ 'UY' sbas) ET (BLOQ 'UZ' p1) ;

** Chargements (on fait varier le rapport entre les contraintes xx et yy imposees)
  langl  = PROG 0. 'PAS' 2.5 360. ;
  lsigxx = PROG ;
  lsigyy = PROG ;
  lok    = LECT ;
  REPE b0 (DIME langl) ;
    angl1 = EXTR langl &b0 ;
    MESS '=== THETA' ' ' angl1 ' ===';
*nh145313
    sigmax0 = 5.E7 ;
    sigmax = sigmax0 / (MAXI (PROG (ABS (COS angl1)) (ABS (SIN angl1)))) ;
    MESS '    sigmax' ' ' sigmax ;
    sxximp = sigmax * (COS angl1) ;
    syyimp = sigmax * (SIN angl1) ;
    fprx   = PRES 'MASS' mo sdroite sxximp ;
    fpry   = PRES 'MASS' mo shaut   syyimp ;
    ev1    = EVOL 'MANU' (PROG 0. 1.) (PROG 0. 1.) ;
    cha    = CHAR 'MECA' (fprx ET fpry) ev1 ;

** Tracé des blocages et du chargement pour une valeur d'angle
    SI (EGA angl1 330.) ;
      re0 = @REPERE (-0.55 -0.55 0.) ;
      mor = MODE re0 'MECANIQUE' 'BARR' ;
      mar = MATE mor 'YOUN' 1. 'NU' 1. 'SECT' 1. ;
      rir = RIGI mor mar ;
      vfx = VECT fprx 'FORC' 'ROUG' (3.E-7 * 2.5E6 / 5.7735E7) ;
      vfy = VECT fpry 'FORC' 'ROUG' (3.E-7 * 2.5E6 / 5.7735E7) ;
      tit0 = CHAI '[3D V] Blocages et chargement, angle' ' ' angl1 ' deg.';
      TRAC ((RIGI mo ma) ET bl ET rir) (vfx ET vfy) 'NOLE' 'TITR' tit0 ;
    FINSI ;

** Resolution
    t                               = TABL ;
    t . 'MODELE'                    = mo ;
    t . 'CARACTERISTIQUES'          = ma ;
    t . 'BLOCAGES_MECANIQUES'       = bl ;
    t . 'CHARGEMENT'                = cha ;
    t . 'TEMPS_CALCULES'            = PROG 0. 'PAS' 0.002 1. ;
    t . 'MOVA'                      = MOT 'D' ;
    t . 'MES_SAUVEGARDES'           = TABL ;
    t . 'MES_SAUVEGARDES' . 'DEFTO' = VRAI ;
    t . 'PROCEDURE_PERSO1'          = VRAI ;
    PASAPAS t ;
    ok = 0 ;
    SI (EXIS t 'ARRET') ;
      SI (t . 'ARRET') ;
        ok = 1 ;
      SINON;
        MESS '    la ruine n''a pas ete atteinte !';
      FINSI ;
    FINSI ;
    lok = lok ET ok ;

** Post traitement
*   Recuperation des contraintes SMXX et SMYY obtenues a l'avant dernier instant de calcul (dernier instant = dommage total)
    evsmxx = EVOL 'TEMP' t 'CONTRAINTES' 'SMXX' 1 1 1 ;
    evsmyy = EVOL 'TEMP' t 'CONTRAINTES' 'SMYY' 1 1 1 ;
    tc = t . 'CONTRAINTES' ;
    nc = DIME tc ;
    vsmxx = (INTG mo (tc . (nc - 2)) 'SMXX') / mes1 ;
    vsmyy = (INTG mo (tc . (nc - 2)) 'SMYY') / mes1 ;
    lsigxx = lsigxx ET ((INTG mo (tc . (nc - 2)) 'SMXX') / mes1) ;
    lsigyy = lsigyy ET ((INTG mo (tc . (nc - 2)) 'SMYY') / mes1) ;
*nh145313
    SI (EGA angl1 330.) ;
*     Courbes Dommage D en fonction des déplacements UX et UY
*     - D calcule au point de Gauss k de l'element j de la zone i
      vi_fi = t . 'VARIABLES_INTERNES' . ((DIME t . 'VARIABLES_INTERNES') - 1) ;
      pgauss = (EXCO vi_fi 'D') POIN 'COMPRIS' 0. 1. ;
      REPE b1_i (EXTR vi_fi 'NBZO') ;
        REPE b1_j (NBEL (EXTR vi_fi 'MAIL')) ;
          REPE b1_k (NBNO pgauss) ;
            evdii = EVOL 'ROUG' 'TEMP' t . 'VARIABLES_INTERNES' 'D   ' &b1_i &b1_j &b1_k ;
            yvdii = EXTR evdii 'ORDO' ;
            evuxi = EVOL 'ROUG' 'TEMP' t . 'DEPLACEMENTS' 'UX  ' p33 ;
            yvuxi = EXTR evuxi 'ORDO' ;
            evduxi = EVOL 'ROUG' 'MANU' 'DEPLACEMENTS' yvuxi 'VAR_INT D' yvdii ;
*            evduxi = EVOL 'ROUG' 'MANU' yvuxi yvdii ;
            evuyi = EVOL 'ROSE' 'TEMP' t . 'DEPLACEMENTS' 'UY  ' p33 ;
            yvuyi = EXTR evuyi 'ORDO' ;
            evduyi = EVOL 'ROSE' 'MANU' 'DEPLACEMENTS' yvuyi 'VAR_INT D' yvdii ;
*            evduyi = EVOL 'ROSE' 'MANU' yvuyi yvdii ;
            SI ((EGA &b1_i 1) ET (EGA &b1_j 1) ET (EGA &b1_k 1)) ;
              evdux1 = evduxi ;
              evduy1 = evduyi ;
            SINON ;
              evdux1 = evdux1 ET evduxi ;
              evduy1 = evduy1 ET evduyi ;
            FINSI ;
          FIN b1_k ;
        FIN b1_j ;
      FIN b1_i ;
*     - table des courbes et cummul dans une seule evolution
      t_evd1 = TABL ;
      t_evd1.'COUR'  = TABL ;
      t_evd1.'MARQ'  = TABL ;
      t_evd1.'TITRE' = TABL ;
      ix = 0 ; iy = 0 ;
      REPE b_evdux1 (DIME evdux1) ;
        ix = &b_evdux1 ;
        iy = (DIME evdux1) + &b_evdux1 ;
        t_evd1.'COUR'.  ix = EXTR evdux1 'COUR' ix ;
        t_evd1.'MARQ'.  ix = 'MARQ LOSA' ;
        t_evd1.'TITRE'. ix = CHAI 'Dir.X_pt.Gauss' ' ' ix ;
        t_evd1.'COUR'.  iy = EXTR evduy1 'COUR' ix ;
        t_evd1.'MARQ'.  iy = 'MARQ LOSA' ;
        t_evd1.'TITRE'. iy = CHAI 'Dir.Y_pt.Gauss' ' ' ix ;
        SI (EGA ix 1) ;
          evd1a = t_evd1.'COUR'. ix ;
        SINON ;
          evd1a = evd1a ET t_evd1.'COUR'. ix ;
        FINSI ;
      FIN b_evdux1 ;
      iy = ix ;
      REPE b_evduy1 (DIME evduy1) ;
        iy = iy + 1 ;
        evd1a = evd1a ET t_evd1.'COUR'. iy ;
      FIN b_evduy1 ;
*     - dessin des courbes de dommage
      tdess1 = TABL ;
      tdess1.'TITRE' = TABL ;
      REPE b_dess1 (2*(DIME evdux1)) ;
        tdess1. &b_dess1 = t_evd1.'MARQ'. &b_dess1 ;
        tdess1.'TITRE'. &b_dess1 = t_evd1.'TITRE'. &b_dess1 ;
      FIN b_dess1 ;
      tit1 = CHAI '[3D V] Dommage D en fn de UX et UY, angle' ' ' angl1 ' deg.';
      DESS evd1a 'TITR' tit1 'LEGE' tdess1 ;

*     Courbes Contraintes en fonction des déformations : SMXX=fn(EPXX) et SMYY=fn(EPYYY)
*     - (SMXX,EPXX) et (SMYY,EPYY) calcules au point de Gauss k de l'element j de la zone i
      REPE b2_i (EXTR vi_fi 'NBZO') ;
        REPE b2_j (NBEL (EXTR vi_fi 'MAIL')) ;
          REPE b2_k (NBNO pgauss) ;
            evsxi = EVOL 'TEMP' t . 'CONTRAINTES'  'SMXX' &b2_i &b2_j &b2_k ;
            evexi = EVOL 'TEMP' t . 'DEFORMATIONS' 'EPXX' &b2_i &b2_j &b2_k ;
            titri = CHAI 'SMXX=f(EPXX) zone' ' ' &b2_i ', elem.' &b2_j ', pt.Gauss' ' ' &b2_k ;
            evxxi = EVOL 'ROUG' 'MANU' 'LEGE' titri 'DEFORMATIONS' (EXTR evexi 'ORDO')
                                                     'CONTRAINTES' (EXTR evsxi 'ORDO') ;
            evsyi = EVOL 'TEMP' t . 'CONTRAINTES'  'SMYY' &b2_i &b2_j &b2_k ;
            eveyi = EVOL 'TEMP' t . 'DEFORMATIONS' 'EPYY' &b2_i &b2_j &b2_k ;
            titri = CHAI 'SMYY=f(EPYY) zone' ' ' &b2_i ', elem.' &b2_j ', pt.Gauss' ' ' &b2_k ;
            evyyi = EVOL 'ROSE' 'MANU' 'LEGE' titri 'DEFORMATIONS' (EXTR eveyi 'ORDO')
                                                     'CONTRAINTES' (EXTR evsyi 'ORDO') ;
            SI ((EGA &b2_i 1) ET (EGA &b2_j 1) ET (EGA &b2_k 1)) ;
              evxx1 = evxxi ;
              evyy1 = evyyi ;
            SINON ; 
              evxx1 = evxx1 ET evxxi ;
              evyy1 = evyy1 ET evyyi ;
            FINSI ;
          FIN b2_k ;
        FIN b2_j ;
      FIN b2_i ;
*     - table des courbes et cummul dans une seule evolution
      t_evse1 = TABL ;
      t_evse1.'COUR'  = TABL ;
      t_evse1.'MARQ'  = TABL ;
      t_evse1.'TITRE' = TABL ;
      REPE b_evse1 ((DIME evxx1) + (DIME evyy1)) ;
        SI (<EG &b_evse1 8) ;
          t_evse1.'COUR'.  &b_evse1 = EXTR evxx1 'COUR' &b_evse1 ;
          t_evse1.'MARQ'.  &b_evse1 = 'MARQ LOSA' ;
          t_evse1.'TITRE'. &b_evse1 = CHAI 'Dir.X_pt.Gauss' ' ' &b_evse1 ;
        SINON ;
          t_evse1.'COUR'.  &b_evse1 = EXTR evyy1 'COUR' (&b_evse1 - 8) ;
          t_evse1.'MARQ'.  &b_evse1 = 'MARQ CARR' ;
          t_evse1.'TITRE'. &b_evse1 = CHAI 'Dir.Y_pt.Gauss' ' ' (&b_evse1 - 8) ;
        FINS;
        SI (EGA &b_evse1 1) ;
          evse1a = t_evse1.'COUR'. &b_evse1 ;
        SINON ;
          evse1a = evse1a ET t_evse1.'COUR'. &b_evse1 ;
        FINSI ;
      FIN b_evse1 ;
*     - dessin des courbes SMXX=fn(EPXX) et SMYY=fn(EPYY)
      tdess2 = TABL ;
      tdess2.'TITRE' = TABL ;
      REPE b_dess2 (DIME evse1a) ;
        tdess2. &b_dess2 = t_evse1.'MARQ'. &b_dess2 ;
        tdess2.'TITRE'. &b_dess2 = t_evse1.'TITRE'. &b_dess2 ;
      FIN b_dess2 ;
      tit2 = CHAI '[3D V] SMXX=fn(EPXX) et SMYY=fn(EPYY), angle' ' ' angl1 ' deg.';
      DESS evse1a 'TITR' tit2 'LEGE' tdess2 ;

*     contraintes SMXX et SMYY et deformations EPXX et EPYY a l'avant dernier instant (on retient l'etat avant dommage total)
      nn = ((DIME t . 'VARIABLES_INTERNES') - 2) ;
      tt = t . 'TEMPS'. nn ;
      titrj = CHAI ' pas' ' ' nn ' instant' ' ' tt ;
      sm_ad = t . 'CONTRAINTES'. nn ;
      ep_ad = t . 'DEFORMATIONS'. nn ;
      val_smxx_ad = MAXI (EXCO sm_ad 'SMXX') ;
      val_epxx_ad = MAXI (EXCO ep_ad 'EPXX') ;
      val_smyy_ad = MAXI (EXCO sm_ad 'SMYY') ;
      val_epyy_ad = MAXI (EXCO ep_ad 'EPYY') ;
      SAUT 1 'LIGN' ;
      MESS '|THETA[deg]' ' ' angl1 ' |SMXX[Pa]' ' ' val_smxx_ad ' |EPXX[adim]' ' ' val_epxx_ad
                                   ' |SMYY[Pa]' ' ' val_smyy_ad ' |EPYY[adim]' ' ' val_epyy_ad ;
    FINSI ;
  FIN b0 ;
* test que pour toutes les valeurs d'angle, on a atteint la ruine
  SI (EXIS lok 0) ;
    MESS ;
    MESS '***** Attention, pour certains points la ruine n''a pas ete atteinte ! *****' ;
    MESS ;
    LIST lok ;
  FINSI ;
  
* Comparaison Calcul / Reference sur la courbe SMXX vs SMYY
* - sol. calculee
  ev1 = EVOL 'ROUG' 'MANU' 'SMXX' lsigxx 'SMYY' lsigyy ;
  iv1 = INTG ev1 'ABS' ;
* - sol. de Référence (calculée) 
  OPTI REST '08_biaxial_Ref_1342.out' ;
  REST ;
  ev2 = ev_ref ;
  iv2 = INTG ev2 'ABS' ;
  evecart = iv2 - iv1 ;
  everel = evecart / iv2 ;
  tit1 = CHAI '[3D V] SMXX vs SMYY, Ecart.Rel. Calcul/Reference' ' ' everel ;
  DESS (ev1 ET ev2) 'CARR' 'AXES' 'GRIL' 'POIN' 'GRIS' 'TITR' tit1 'LEGE' tdess ;
  
* Courbes normalisées à la resistance en compression uniaxiale Fc : SMXX/Fc - SMYY/Fc
* - REX cas-test 2D-CP de compression uniaxiale en contrainte imposée 08_biaxial_Ref_1222c.dgibi : Fc = -25,64 MPa
  Fc = -0.2564E8 ;
*  - normalisation
  ev1sFc = EVOL 'ROUG' 'MANU' 'SMXX/Fc' (lsigxx / (ABS Fc)) 'SMYY' (lsigyy / (ABS Fc)) ;
  ev2sFc = EVOL 'ROSE' 'MANU' 'SMXX/Fc' ((EXTR ev_ref 'ABSC') / (ABS Fc)) 'SMYY' ((EXTR ev_ref 'ORDO') / (ABS Fc)) ;
  DESS (ev1sFc ET ev2sFc) 'CARR' 'AXES' 'GRIL' 'POIN' 'GRIS' 'TITR' '[3D V] Diagramme des contraintes normalisees SMXX/Fc - SMYY/Fc' 'LEGE' tdess ;

  OPTI ECHO 0 ;
  SAUT 1 LIGN ;
  MESS ' **************** C A S  #1  :  3 D   V O L U M I Q U E ****************';
  SAUT 1 LIGN ;
  SI (everel < 3.E-2) ;
    MESS ' Ecart relatif max entre Calcul et Reference' ' ' everel ' < 3.E-2 => OK' ;
    SAUT 1 LIGN ;
    ERRE 0 ;
  SINO ;
    MESS ' Ecart relatif max entre Calcul et Reference' ' ' everel ' > 3.E-2 => ERREUR' ;
    ERRE 0 ;
*    ERRE 'ECHEC DU CAS-TEST' ;
    SAUT 1 LIGN ;
  FINS ;
  SAUT 1 LIGN ;
  OPTI ECHO 1 ;

FINSI ;




******* C A S  #2  :  2 D   C O N T R A I N T E S   P L A N E S ********
SI (EXIS lcas 2) ;

** Options generales
  OPTI 'DIME' 2 'MODE' 'PLAN' 'CONT' 'ELEM' 'QUA4' ;

** Maillage
  p1      = 0. 0. ;
  p2      = 0. long ;
  sgauche = DROI 1 p1 p2 ;
  mail    = sgauche TRAN 1 (long 0.) ;
  shaut   = mail COTE 2 ;
  sdroite = mail COTE 3 ;
  sbas    = mail COTE 4 ;
  mes1    = MESU mail ;
*nh145313
  p33 = mail POIN 'PROC' (long long) ;
*nh145313
*rep1 = @REPERE (-0.55 -0.55) 'TURQ' ;
*TRAC 'QUAL' (rep1 ET mail ET ((sgauche ET sbas) COUL 'VERT') ET ((sdroite ET shaut) COUL 'ROUG')) 'TITR' '[2D Plan cont.] Maillage' ;

** Modele et caracteristiques materiau
  mo = MODE mail 'MECANIQUE' 'ELASTIQUE' 'ENDOMMAGEMENT' 'MAZARS' ;
  ma = MATE mo 'YOUN' you 'NU' nu 'KTR0' epd0 'ACOM' ac 'BCOM' bc 'ATRA' at 'BTRA' bt 'BETA' beta 'DIM3' epai ;

** Blocages
  bl = (BLOQ 'UX' sgauche) ET (BLOQ 'UY' sbas) ;

** Chargements (on fait varier le rapport entre les contraintes xx et yy imposees)
  langl  = PROG 0. 'PAS' 2.5 360. ;
  lsigxx = PROG ;
  lsigyy = PROG ;
  lok    = LECT ;
  REPE b0 (DIME langl) ;
    angl1 = EXTR langl &b0 ;
    MESS '=== THETA' ' ' angl1 ' ===';
*nh145313
    sigmax0 = 5.E6 ;
    sigmax = sigmax0 / (MAXI (PROG (ABS (COS angl1)) (ABS (SIN angl1)))) ;
    MESS '    sigmax' ' ' sigmax ;
    sxximp = sigmax * (COS angl1) ;
    syyimp = sigmax * (SIN angl1) ;
    fprx   = PRES 'MASS' mo sdroite sxximp ;
    fpry   = PRES 'MASS' mo shaut   syyimp ;
    ev1    = EVOL 'MANU' (PROG 0. 1.) (PROG 0. 1.) ;
    cha    = CHAR 'MECA' (fprx ET fpry) ev1 ;

** Tracé des blocages et du chargement pour une valeur d'angle
    SI (EGA angl1 330.) ;
      re0 = @REPERE (-0.55 -0.55) ;
      mor = MODE re0 'MECANIQUE' 'BARR' ;
      mar = MATE mor 'YOUN' 1. 'NU' 1. 'SECT' 1. ;
      rir = RIGI mor mar ;
      vfx = VECT fprx 'FORC' 'ROUG' (1.E-6 * 0.25E6 / 5.7735E6) ;
      vfy = VECT fpry 'FORC' 'ROUG' (1.E-6 * 0.25E6 / 5.7735E6) ;
      tit0 = CHAI '[2D Plan cont.] Blocages et chargement, angle' ' ' angl1 ' deg.';
      TRAC ((RIGI mo ma) ET bl ET rir) (vfx ET vfy) 'NOLE' 'TITR' tit0 ;
    FINSI ;

** Resolution
    t                               = TABL ;
    t . 'MODELE'                    = mo ;
    t . 'CARACTERISTIQUES'          = ma ;
    t . 'BLOCAGES_MECANIQUES'       = bl ;
    t . 'CHARGEMENT'                = cha ;
    t . 'TEMPS_CALCULES'            = PROG 0. 'PAS' 0.002 1. ;
    t . 'MOVA'                      = MOT 'D' ;
    t . 'MES_SAUVEGARDES'           = TABL ;
    t . 'MES_SAUVEGARDES' . 'DEFTO' = VRAI ;
    t . 'PROCEDURE_PERSO1'          = VRAI ;
    PASAPAS t ;
    ok = 0 ;
    SI (EXIS t 'ARRET') ;
      SI (t . 'ARRET') ;
        ok = 1 ;
      SINON;
        MESS '    la ruine n''a pas ete atteinte !';
      FINSI ;
    FINSI ;
    lok = lok ET ok ;

** Post traitement
*   Recuperation des contraintes SMXX et SMYY obtenues a l'avant dernier instant de calcul (dernier instant = dommage total)
    evsmxx = EVOL 'TEMP' t 'CONTRAINTES' 'SMXX' 1 1 1 ;
    evsmyy = EVOL 'TEMP' t 'CONTRAINTES' 'SMYY' 1 1 1 ;
    tc = t . 'CONTRAINTES' ;
    nc = DIME tc ;
    vsmxx = (INTG mo (tc . (nc - 2)) 'SMXX') / mes1 ;
    vsmyy = (INTG mo (tc . (nc - 2)) 'SMYY') / mes1 ;
    lsigxx = lsigxx ET ((INTG mo (tc . (nc - 2)) 'SMXX') / mes1) ;
    lsigyy = lsigyy ET ((INTG mo (tc . (nc - 2)) 'SMYY') / mes1) ;
*nh145313
    SI (EGA angl1 330.) ;
*     Courbes Dommage D en fonction des déplacements UX et UY
*     - D calcule au point de Gauss k de l'element j de la zone i
      vi_fi = t . 'VARIABLES_INTERNES' . ((DIME t . 'VARIABLES_INTERNES') - 1) ;
      pgauss = (EXCO vi_fi 'D') POIN 'COMPRIS' 0. 1. ;
      REPE b1_i (EXTR vi_fi 'NBZO') ;
        REPE b1_j (NBEL (EXTR vi_fi 'MAIL')) ;
          REPE b1_k (NBNO pgauss) ;
            evdii = EVOL 'ROUG' 'TEMP' t . 'VARIABLES_INTERNES' 'D   ' &b1_i &b1_j &b1_k ;
            yvdii = EXTR evdii 'ORDO' ;
            evuxi = EVOL 'ROUG' 'TEMP' t . 'DEPLACEMENTS' 'UX  ' p33 ;
            yvuxi = EXTR evuxi 'ORDO' ;
            evduxi = EVOL 'ROUG' 'MANU' 'DEPLACEMENTS' yvuxi 'VAR_INT D' yvdii ;
*            evduxi = EVOL 'ROUG' 'MANU' yvuxi yvdii ;
            evuyi = EVOL 'ROSE' 'TEMP' t . 'DEPLACEMENTS' 'UY  ' p33 ;
            yvuyi = EXTR evuyi 'ORDO' ;
            evduyi = EVOL 'ROSE' 'MANU' 'DEPLACEMENTS' yvuyi 'VAR_INT D' yvdii ;
*            evduyi = EVOL 'ROSE' 'MANU' yvuyi yvdii ;
            SI ((EGA &b1_i 1) ET (EGA &b1_j 1) ET (EGA &b1_k 1)) ;
              evdux1 = evduxi ;
              evduy1 = evduyi ;
            SINON ;
              evdux1 = evdux1 ET evduxi ;
              evduy1 = evduy1 ET evduyi ;
            FINSI ;
          FIN b1_k ;
        FIN b1_j ;
      FIN b1_i ;
*     - table des courbes et cummul dans une seule evolution
      t_evd1 = TABL ;
      t_evd1.'COUR'  = TABL ;
      t_evd1.'MARQ'  = TABL ;
      t_evd1.'TITRE' = TABL ;
      ix = 0 ; iy = 0 ;
      REPE b_evdux1 (DIME evdux1) ;
        ix = &b_evdux1 ;
        iy = (DIME evdux1) + &b_evdux1 ;
        t_evd1.'COUR'.  ix = EXTR evdux1 'COUR' ix ;
        t_evd1.'MARQ'.  ix = 'MARQ LOSA' ;
        t_evd1.'TITRE'. ix = CHAI 'Dir.X_pt.Gauss' ' ' ix ;
        t_evd1.'COUR'.  iy = EXTR evduy1 'COUR' ix ;
        t_evd1.'MARQ'.  iy = 'MARQ LOSA' ;
        t_evd1.'TITRE'. iy = CHAI 'Dir.Y_pt.Gauss' ' ' ix ;
        SI (EGA ix 1) ;
          evd1a = t_evd1.'COUR'. ix ;
        SINON ;
          evd1a = evd1a ET t_evd1.'COUR'. ix ;
        FINSI ;
      FIN b_evdux1 ;
      iy = ix ;
      REPE b_evduy1 (DIME evduy1) ;
        iy = iy + 1 ;
        evd1a = evd1a ET t_evd1.'COUR'. iy ;
      FIN b_evduy1 ;
*     - dessin des courbes de dommage
      tdess1 = TABL ;
      tdess1.'TITRE' = TABL ;
      REPE b_dess1 (2*(DIME evdux1)) ;
        tdess1. &b_dess1 = t_evd1.'MARQ'. &b_dess1 ;
        tdess1.'TITRE'. &b_dess1 = t_evd1.'TITRE'. &b_dess1 ;
      FIN b_dess1 ;
      tit1 = CHAI '[2D Plan cont.] Dommage D en fn de UX et UY, angle' ' ' angl1 ' deg.';
      DESS evd1a 'TITR' tit1 'LEGE' tdess1 ;

*     Courbes Contraintes en fonction des déformations : SMXX=fn(EPXX) et SMYY=fn(EPYYY)
*     - (SMXX,EPXX) et (SMYY,EPYY) calcules au point de Gauss k de l'element j de la zone i
      REPE b2_i (EXTR vi_fi 'NBZO') ;
        REPE b2_j (NBEL (EXTR vi_fi 'MAIL')) ;
          REPE b2_k (NBNO pgauss) ;
            evsxi = EVOL 'TEMP' t . 'CONTRAINTES'  'SMXX' &b2_i &b2_j &b2_k ;
            evexi = EVOL 'TEMP' t . 'DEFORMATIONS' 'EPXX' &b2_i &b2_j &b2_k ;
            titri = CHAI 'SMXX=f(EPXX) zone' ' ' &b2_i ', elem.' &b2_j ', pt.Gauss' ' ' &b2_k ;
            evxxi = EVOL 'ROUG' 'MANU' 'LEGE' titri 'DEFORMATIONS' (EXTR evexi 'ORDO')
                                                     'CONTRAINTES' (EXTR evsxi 'ORDO') ;
            evsyi = EVOL 'TEMP' t . 'CONTRAINTES'  'SMYY' &b2_i &b2_j &b2_k ;
            eveyi = EVOL 'TEMP' t . 'DEFORMATIONS' 'EPYY' &b2_i &b2_j &b2_k ;
            titri = CHAI 'SMYY=f(EPYY) zone' ' ' &b2_i ', elem.' &b2_j ', pt.Gauss' ' ' &b2_k ;
            evyyi = EVOL 'ROSE' 'MANU' 'LEGE' titri 'DEFORMATIONS' (EXTR eveyi 'ORDO')
                                                     'CONTRAINTES' (EXTR evsyi 'ORDO') ;
            SI ((EGA &b2_i 1) ET (EGA &b2_j 1) ET (EGA &b2_k 1)) ;
              evxx1 = evxxi ;
              evyy1 = evyyi ;
            SINON ; 
              evxx1 = evxx1 ET evxxi ;
              evyy1 = evyy1 ET evyyi ;
            FINSI ;
          FIN b2_k ;
        FIN b2_j ;
      FIN b2_i ;
*     - table des courbes et cummul dans une seule evolution
      t_evse1 = TABL ;
      t_evse1.'COUR'  = TABL ;
      t_evse1.'MARQ'  = TABL ;
      t_evse1.'TITRE' = TABL ;
      REPE b_evse1 ((DIME evxx1) + (DIME evyy1)) ;
        SI (<EG &b_evse1 4) ;
          t_evse1.'COUR'.  &b_evse1 = EXTR evxx1 'COUR' &b_evse1 ;
          t_evse1.'MARQ'.  &b_evse1 = 'MARQ LOSA' ;
          t_evse1.'TITRE'. &b_evse1 = CHAI 'Dir.X_pt.Gauss' ' ' &b_evse1 ;
        SINON ;
          t_evse1.'COUR'.  &b_evse1 = EXTR evyy1 'COUR' (&b_evse1 - 4) ;
          t_evse1.'MARQ'.  &b_evse1 = 'MARQ CARR' ;
          t_evse1.'TITRE'. &b_evse1 = CHAI 'Dir.Y_pt.Gauss' ' ' (&b_evse1 - 4) ;
        FINS;
        SI (EGA &b_evse1 1) ;
          evse1a = t_evse1.'COUR'. &b_evse1 ;
        SINON ;
          evse1a = evse1a ET t_evse1.'COUR'. &b_evse1 ;
        FINSI ;
      FIN b_evse1 ;
*     - dessin des courbes SMXX=fn(EPXX) et SMYY=fn(EPYY)
      tdess2 = TABL ;
      tdess2.'TITRE' = TABL ;
      REPE b_dess2 (DIME evse1a) ;
        tdess2. &b_dess2 = t_evse1.'MARQ'. &b_dess2 ;
        tdess2.'TITRE'. &b_dess2 = t_evse1.'TITRE'. &b_dess2 ;
      FIN b_dess2 ;
      tit2 = CHAI '[2D Plan cont.] SMXX=fn(EPXX) et SMYY=fn(EPYY), angle' ' ' angl1 ' deg.';
      DESS evse1a 'TITR' tit2 'LEGE' tdess2 ;

*     contraintes SMXX et SMYY et deformations EPXX et EPYY a l'avant dernier instant (on retient l'etat avant dommage total)
      nn = ((DIME t . 'VARIABLES_INTERNES') - 2) ;
      tt = t . 'TEMPS'. nn ;
      titrj = CHAI ' pas' ' ' nn ' instant' ' ' tt ;
      sm_ad = t . 'CONTRAINTES'. nn ;
      ep_ad = t . 'DEFORMATIONS'. nn ;
      val_smxx_ad = MAXI (EXCO sm_ad 'SMXX') ;
      val_epxx_ad = MAXI (EXCO ep_ad 'EPXX') ;
      val_smyy_ad = MAXI (EXCO sm_ad 'SMYY') ;
      val_epyy_ad = MAXI (EXCO ep_ad 'EPYY') ;
      SAUT 1 'LIGN' ;
      MESS '|THETA[deg]' ' ' angl1 ' |SMXX[Pa]' ' ' val_smxx_ad ' |EPXX[adim]' ' ' val_epxx_ad
                                   ' |SMYY[Pa]' ' ' val_smyy_ad ' |EPYY[adim]' ' ' val_epyy_ad ;
    FINSI ;
  FIN b0 ;
* test que pour toutes les valeurs d'angle, on a atteint la ruine
  SI (EXIS lok 0) ;
    MESS ;
    MESS '***** Attention, pour certains points la ruine n''a pas ete atteinte ! *****' ;
    MESS ;
    LIST lok ;
  FINSI ;
  
* Comparaison Calcul / Reference sur la courbe SMXX vs SMYY
* - sol. calculee
  ev1 = EVOL 'ROUG' 'MANU' 'SMXX' lsigxx 'SMYY' lsigyy ;
  iv1 = INTG ev1 'ABS' ;
* - sol. de Référence (calculée) 
  OPTI REST '08_biaxial_Ref_1242c.out' ;
  REST ;
  ev2 = ev_ref ;
  iv2 = INTG ev2 'ABS' ;
  evecart = iv2 - iv1 ;
  everel = evecart / iv2 ;
  tit1 = CHAI '[2D Plan cont.] SMXX vs SMYY, Ecart.Rel. Calcul/Reference' ' ' everel ;
  DESS (ev1 ET ev2) 'CARR' 'AXES' 'GRIL' 'POIN' 'GRIS' 'TITR' tit1 'LEGE' tdess ;
  
* Courbes normalisées à la resistance en compression uniaxiale Fc : SMXX/Fc - SMYY/Fc
* - REX cas-test 2D-CP de compression uniaxiale en contrainte imposée 08_biaxial_Ref_1222c.dgibi : Fc = -25,64 MPa
  Fc = -0.2564E8 ;
*  - normalisation
  ev1sFc = EVOL 'ROUG' 'MANU' 'SMXX/Fc' (lsigxx / (ABS Fc)) 'SMYY' (lsigyy / (ABS Fc)) ;
  ev2sFc = EVOL 'ROSE' 'MANU' 'SMXX/Fc' ((EXTR ev_ref 'ABSC') / (ABS Fc)) 'SMYY' ((EXTR ev_ref 'ORDO') / (ABS Fc)) ;
  DESS (ev1sFc ET ev2sFc) 'CARR' 'AXES' 'GRIL' 'POIN' 'GRIS' 'TITR' '[2D Plan cont.] Diagramme des contraintes normalisees SMXX/Fc - SMYY/Fc' 'LEGE' tdess ;

  OPTI ECHO 0 ;
  SAUT 1 LIGN ;
  MESS ' ******* C A S  #2  :  2 D   C O N T R A I N T E S   P L A N E S *******';
  SAUT 1 LIGN ;
  SI (everel < 3.E-2) ;
    MESS ' Ecart relatif max entre Calcul et Reference' ' ' everel ' < 3.E-2 => OK' ;
    SAUT 1 LIGN ;
    ERRE 0 ;
  SINO ;
    MESS ' Ecart relatif max entre Calcul et Reference' ' ' everel ' > 3.E-2 => ERREUR' ;
    ERRE 0 ;
*    ERRE 'ECHEC DU CAS-TEST' ;
    SAUT 1 LIGN ;
  FINS ;
  SAUT 1 LIGN ;
  OPTI ECHO 1 ;

FINSI ;

*nh145313
TEMPS ;


FIN ;
